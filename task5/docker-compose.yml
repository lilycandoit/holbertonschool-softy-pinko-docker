version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: softy-pinko-db
    environment:
      POSTGRES_DB: softy_pinko
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - softy-pinko-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build: .
    container_name: softy-pinko-api
    environment:
      DB_HOST: db
      DB_NAME: softy_pinko
      DB_USER: postgres
      DB_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
    networks:
      - softy-pinko-network
    restart: unless-stopped

  # Frontend with Nginx
  frontend:
    build: ../task3
    container_name: softy-pinko-frontend
    ports:
      - "9000:80"
    depends_on:
      - api
    networks:
      - softy-pinko-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  softy-pinko-network:
    driver: bridge